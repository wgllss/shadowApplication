apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.tencent.shadow.sample.host"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.create("release")
            signingConfig.initWith(buildTypes.debug.signingConfig)
        }
    }

//    sourceSets {
//        debug {
//            assets.srcDir('build/generated/assets/sample-manager/debug/')
//            assets.srcDir('build/generated/assets/plugin-zip/debug/')
//        }
//        release {
//            assets.srcDir('build/generated/assets/sample-manager/release/')
//            assets.srcDir('build/generated/assets/plugin-zip/release/')
//        }
//    }
}

dependencies {
    implementation project(':introduce-shadow-lib')

    //如果introduce-shadow-lib发布到Maven，在pom中写明此依赖，宿主就不用写这个依赖了。
    implementation "com.tencent.shadow.dynamic:host:$shadow_version"
}

//def createCopyTask(projectName, buildType, name, apkName, inputFile, taskName) {
//    def outputFile = file("${getBuildDir()}/generated/assets/${name}/${buildType}/${apkName}")
//    outputFile.getParentFile().mkdirs()
//    return tasks.create("copy${buildType.capitalize()}${name.capitalize()}Task", Copy) {
//        group = 'build'
//        description = "复制${name}到assets中."
//        from(inputFile.getParent()) {
//            include(inputFile.name)
//            rename { outputFile.name }
//        }
//        into(outputFile.getParent())
//
//    }.dependsOn("${projectName}:${taskName}")
//}
//
//def generateAssets(generateAssetsTask, buildType) {
//
//    def moduleName = 'sunflower-manager'
//    def pluginManagerApkFile = file(
//            "${project(":sunflower-manager").getBuildDir()}" +
//                    "/outputs/apk/${buildType}/" +
//                    "${moduleName}-${buildType}.apk"
//    )
//    generateAssetsTask.dependsOn createCopyTask(
//            ':sunflower-manager',
//            buildType,
//            moduleName,
//            'sample-manager.apk',
//            pluginManagerApkFile,
//            "assemble${buildType.capitalize()}"
//    )
//
//    def pluginZip = file("${getRootProject().getBuildDir()}/plugin-${buildType}.zip")
//    generateAssetsTask.dependsOn createCopyTask(
//            ':sapp',
//            buildType,
//            'plugin-zip',
//            "plugin-${buildType}.zip",
//            pluginZip,
//            "assemble${buildType.capitalize()}"
//    )
//
//
//}
//
//tasks.whenTaskAdded { task ->
//    if (task.name == "generateDebugAssets") {
//        generateAssets(task, 'debug')
//    }
//    if (task.name == "generateReleaseAssets") {
//        generateAssets(task, 'release')
//    }
//}
